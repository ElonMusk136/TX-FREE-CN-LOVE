return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bi)local bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw=91,78,65,59,95,62,84,35,99,82,25,94,70,39,46,34,50,82,94,95,87,86,53,44,80,92,83,81,22,44,29,92,10,56,34,75,75,25,81,27,48,85,41,71,74,28,54,70,86,43,21,97 while bi~=75 do if bj<=729 then if bj>=453 then if bj>=582 then if bj<=641 then if bj>=613 then if bj<633 then bj=641 by=tonumber else cw={}bj=667 end else bj=613 do ca=(unpack or table.unpack)end end else if bj<=667 then bj=695 for bi=0,255 do cw[bi]=bv(bi);end else if bj>701 then bq={{0,1,2,3,be,5,6,7,8,9,10,bc,12,13,14,15,},{1,0,3,2,5,4,7,6,bd,8,11,10,i,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,n,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,t,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,v,12,13,10,11,8,9,},{7,6,5,4,3,y,1,0,15,14,13,12,11,10,9,8,},{8,9,10,s,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,p,12,3,2,u,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,m,1,2,3,},{13,12,k,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,b,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}bj=763 else cm=cffunction(b,i)return cw[by(b,16)]end)bj=729 end end end else if bj<=477 then if bj>462 then bj=492 do bp=type end else bj=477 cu=select end else if bj>=533 then if bj<541 then bj=549 ck=math.abs else bt=math.floor bj=582 end else cl=(function(b,i,i)if not(bp(b)~='number')then return true else return false end end)bj=533 end end end else if bj>=221 then if bj<=293 then if bj>=266 then if bj<287 then cq=table.concat bj=293 else bj=333 ce=table.insert end else do ci=string.rep end bj=266 end else if bj>=365 then if bj>371 then bj=453 do cs=setmetatable end else bx=(getfenv or function()return _ENV end)bj=409 end else bj=365 cr=math.ldexp end end else if bj<=120 then if bj<114 then bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw=nil bj=120 else do cb=string.byte end bj=139 end else if bj<=139 then bv=string.char bj=171 else if bj>173 then bj=221 cf=string.gsub else do bu=string.sub end bj=205 end end end end end else if bj>=1069 then if bj<=1203 then if bj<=1102 then if bj>1074 then bj=1150 bs=function()local b,i,k,m,n,p,s,t=52,30,56,18,92,41,56,10,37,14,43,64,95,26,91,35,61,97 while b~=30 do if i<=180 then if i>=118 then if i<=118 then p=cg()i=156 else if i<175 then i=180 if((s==0 and p==bh))then do return ba end end else i=229 t=((-1)^bl(31,p,1))end end else if i<67 then k,m,n,p,s,t=nil i=70 else s=cg()i=118 end end else if i<=289 then if i>=263 then if i<286 then n=(bl(0,p,20)*4294967296+s)i=289 else i=332 m=1 end else i=263 k=bl(20,p,11)end else if i<=332 then if not(k~=0)then if not(n==0)then k=1 m=0 else return(t*0)end elseif not(k==2047)then else do if not(n~=0)then do return(t*(0/0))end else return(t*(1/0))end end end i=347 else if i<387 then i=389 return(t*(2^(k-1023))*(n/co+m))else b=30;end end end end end end else bj=1102 bz=function()local b,i i,b=cb(cm,ch,(ch+2))ch=(ch+2);do return((b*256)+i);end end end else if bj<=1150 then bj=1173 bo=function(b,b,b,b)local b,i,k,m=82,29,72,61,19,23,85,36,42,84,36,96,42,55,57 while b~=44 do if i>=90 then if i<=90 then i=105 ch=(ch+m);else if i<140 then i=144 return k;else b=44;end end else if i>=48 then if i<63 then m=cg()i=66 else i=90 do k=cm:sub(ch,(ch+m-1))end end else k,m=nil i=48 end end end end else if bj<1195 then cc=function(...)return{...},cu('#',...)end bj=1203 else do cn={}end bj=1240 end end end else if bj<=1307 then if bj<=1240 then bj=1269 bn=function(b,i)local i,k,m,n,p,s,t,u=81,59,88,25,97,80,27,66,86,13,96,39,40,34,39,13,42,10,97,82,48,92,49,78 while i~=38 do if k<=251 then if k<=148 then if k<=85 then if k<81 then m,n,p,s,t,u=nil k=85 else k=117 s={}end else if k>120 then k=163 t={}else m={}k=148 end end else if k<=200 then if k<194 then k=200 n=cg()else for v=(#cn+1),(#cn+n)do local n,y,ba,bc,bd=66,43,15,64,73,52,43,16,41,67,63,24,49,84,81,36,54,73,42,26,75,60,14 while n~=53 do if y>=285 then if y<=375 then if y<=318 then if y>294 then y=350 bd[95]=br(ba,12,20);else y=318 do bd[131]=br(ba,3,11);end end else if y<372 then y=375 bd[191]=br(ba,21,29);else y=404 bd[111]=br(bc,12,33);end end else if y<=419 then if y>406 then bd[33]=-bd[191]y=443 else y=419 do bd[114]=-bd[131]end end else if y<485 then y=488 cn[v]=bd;else break end end end else if y<=134 then if y<=74 then if y<71 then ba,bc,bd=nil y=74 else do bd={}end y=102 end else if y>104 then ba=cg()y=152 else y=134 bd[80]=cp();end end else if y>=230 then if y<240 then bd[123]=br(ba,1,2);y=247 else y=285 bd[161]=br(bc,1,11);end else if y<180 then bc=cg()y=186 else bd[126]=cp();y=230 end end end end end end k=226 end else if k>231 then k=290 do t[179]=s;end else k=251 do for n=1,cg()do local v,y,ba,bc,bd,be=67,47,47,22,80,88,72,51,25,60,22,30,39,41,39,37,75,11,45,96,94,71,90,73 while v~=38 do if y<=321 then if y>=171 then if y>=229 then if y>=275 then if y>278 then y=356 bd[123]=ba else ba=br(bc,1,2)y=321 end else do be=cg()end y=275 end else if y<181 then if not(cp()~=1)then for v=1,cp()do bd[59][v]={cp()==0,cg()}end end y=186 else y=229 bc=cg()end end else if y>=88 then if y>92 then bd[59]={};y=171 else y=124 bd[80]=cp();end else if y<64 then ba,bc,bd,be=nil y=70 else bd={{},nil,nil}y=88 end end end else if y>=490 then if y<=507 then if y<500 then y=507 bd[126]=br(bc,12,c);else bd[114]=-bd[131]y=542 end else if y>=563 then if y>569 then break else y=606 s[n]=bd;end else y=563 bd[33]=-bd[191]end end else if y>=422 then if y>428 then bd[191]=br(bc,21,29);y=490 else y=445 do bd[111]=br(be,12,33);end end else if y>363 then y=422 bd[131]=br(bc,3,11);else do bd[161]=br(be,1,j);end y=378 end end end end end end end end end end else if k<=418 then if k<=338 then if k>293 then k=381 do u={}end else p=cg()k=338 end else if k>384 then k=462 do t[129]=u end else for c=1,p do local j,n,p,s=74,44,18,90,99,23,49,17,29,55,45,35,14,25 while j~=43 do if n<=110 then if n>=89 then if n<108 then n=110 p=cp()else s=nil n=126 end else n=89 p,s=nil end else if n<=126 then n=174 if(0==p)then s=(0~=cp());elseif(not(p~=1))then s=bs();elseif(not(p~=3))then s=bo();elseif(not(p~=4))then s=b[bo()];end;else if n>179 then j=43;else n=223 u[c]=s;end end end end end k=418 end end else if k<=485 then if k<476 then k=485 for b=1,cg()do m[b-1]=bn();end else t[28]=m;k=504 end else if k>=526 then if k<552 then k=560 return t;else i=38;end else t[108]=cp();k=526 end end end end end end else if bj>1278 then bj=1344 bk={}else bj=1307 bw={}end end else if bj>=1359 then if bj<1397 then bj=1400 do return bm(bn(bx()),{},bx())();end else break end else bj=1359 bm=function(b,c,i,j,j,j)local j,k,m,n,p do m=b[179]end k=b[108]p=bw n=b[28]j=b[129]return function(...)local b,p,s,t,u,v,y,ba,bc b=1 do t=-1 end ba=-1 y={}bc={...}u=(cu('#',...)-1)p={}s={}for ba=0,u do if(not(ba<k))then do y[(ba-k)]=bc[(ba+a)];end else do s[ba]=bc[(ba+1)];end end;end;v=(u-k+h)do while true do local a,h,v,ba,bd,be,bh,bi,bk,bn bd=m[b]be=bd[161]v=bd[80]ba=bd[131]do bk=bd[95]end do bh=bd[191]end bn=bd[126]bi=bd[114]a=bd[111]h=bd[33]do if not(be<46)then if not(bd[161]>68)then if not(be<57)then if not(bd[161]>62)then if not(be>59)then if not(bd[161]<58)then if(be>58)then b=a;else end else do while((s[ba]~=j[bh]))do b=a;break end end end else if not(be>60)then local v,bo v=a bo=s[v]for bp=(v+1),bd[191]do do bo=(bo..s[bp]);end end;s[bd[131]]=bo;else do if(be>61)then do s[ba]=(s[a]%s[bh]);end else s[ba]=-s[a];end end end end else if not(be>65)then if not(be<64)then if 64==be then local v do v=ba end s[v]=s[v](s[v+1]);else do s[ba]=(s[a]%j[bh]);end end else b=((j[bd[131]]<s[bd[191]])and a or b)end else if not(be<67)then do if 67==be then s[ba]=(s[a]*j[bh]);else s[ba]=j[a]end end else if((s[ba]>s[bh]))then b=bd[111];end;end end end else if not(be<51)then if not(be<54)then if not(be>54)then local v,bo,bp bp=bd[131]v=s[bp]bo=a for bs=1,bo do do v[bs]=s[(bp+bs)]end end;else if(bd[161]>55)then local v,bo,bp,bs bo=ba do bs=((bh-1)*50)end bp=s[bo]v=a for bt=1,v do bp[(bs+bt)]=s[(bo+bt)]end;else do do return s[ba]end end end end else if not(be<52)then if(be>52)then local v v=bd[131]s[v]=s[v](ca(s,v+1,a));else do s[ba]=i[j[a]][j[bh]];end end else end end else if not(bd[161]<48)then if not(be>q)then t=bd[ba];else if(be>49)then do bw[ba]()end else do s[ba]=#s[a];end end end else if(be>46)then if(s[bh]~=s[ba])then b=a;end;else s[bd[131]][s[bd[111]]]=s[bh];end end end end else do if not(be>80)then do if not(be>74)then if not(be<72)then if not(be<73)then if not(be~=73)then s[ba]=(not s[a]);else local q q=ba do do return ca(s,q,(q+a))end;end end else s[ba]=(s[bd[111]]-s[bh]);end else if not(be>69)then local q,v,bo v=ba q=s[v]bo=s[(v+2)]if((bo>0))then if((q>s[v+1]))then b=a;else s[(v+3)]=q;end elseif((q<s[v+1]))then do b=a;end else s[(v+3)]=q;end else if(bd[161]<71)then s[ba]=(s[a]*s[bd[191]]);else local q,v,bo bo=ba v={s[bo](ca(s,bo+1,a))}q=0 for bp=bo,bh do q=(q+e);s[bp]=v[q];end end end end else do if not(bd[161]<78)then if not(be<79)then if(be<80)then local e,q e=ba q={}if(#p>0)then for v=1,#p do local bo bo=p[v]do for v=0,#bo do local bp,bs,bt bt=bo[v]bp=bt[1]do bs=bt[2]end if(bp==s and bs>=0)then q[bs]=bp[bs]bt[bg]=q end end end end end return s[e],s[(e+1)]else s[h]=(function()s[ba]=bm(n[bk],nil,i);end)end else local e e=s[bi][bd[126]]s[bi][bd[126]]=(e..s[bh]);end else do if not(be>75)then i=s[bd[ba]]else if(be<z)then do s[ba]=(s[a]+j[bd[191]]);end else bw[ba]=s[bk]end end end end end end end else if not(be<87)then if not(be<90)then if not(bd[161]>90)then do if((j[ba]<s[bh]))then b=a;end;end else if not(be~=91)then do s[ba]=i[j[bd[111]]];end else do s[ba]=s[bd[111]];end end end else if not(be>87)then do if(not(s[ba]<s[bd[191]]))then b=a;end;end else if(be>88)then do if not s[ba]then b=a;end;end else do return s[bi][bn]end end end end else if not(bd[r]<84)then do if not(be<85)then if(be>d)then if s[ba]then b=a;end;else s[ba]=bw[bd[95]]end else s[bd[131]]=s[a]end end else if not(bd[161]>81)then m[b]=cn[bn];b=a;else if(be>82)then while not s[bd[191]]do s[ba]=s[bh];b=a;break end else s[ba]=(s[a]+s[bh]);end end end end end end end else if not(be>22)then if not(be<11)then if not(be<17)then if not(be>o)then if not(be<18)then if(be<19)then do s[ba]=(not(a==0));end b=(b+1);else local d,e,o e=ba d={s[e](s[e+1])}o=0 for q=e,bh do o=(o+1);s[q]=d[o];end end else local d,e,o,q d=ba do q,e=cc(s[d](ca(s,(d+1),a)))end t=(e+d-1)o=0 for e=d,t do o=(o+1);s[e]=q[o];end;end else if not(be>20)then bw=s else do if 21==bd[161]then if bd[f]then ba=bf;bh=a;b=(b-1);else b=(b+a+bh);end else do s[bd[ba]]=s end end end end end else if not(be<14)then if not(be<15)then if(be<16)then local d d=ba do s[d](ca(s,(d+g),a))end else local d,e do d=bd[131]end e=bd[111]for f=d,e do s[f]=y[(f-d)];end;end else s[ba]=nil;end else if not(be>11)then local d,e do e=ba end d={}for f=1,#p do local g do g=p[f]end for f=0,#g do local o,q,r q=g[f]r=q[1]o=q[2]while(r==s and o>=e)do d[o]=r[o];q[1]=d;break end end;end;else if 12==be then s[ba]=c[bd[111]];else s={};for d=0,u do if(d<k)then s[d]=bc[(d+1)];else break end;end;end end end end else do if not(be>4)then if not(bd[161]>1)then if(be>0)then s[bd[131]]=bw[bk]else s[h]=(function()s[ba]=bm(n[bk],nil,i);end)end else if not(be<3)then do if 3==be then s[ba]=(s[a]^s[bh]);else bw[ba]={}end end else local d d={}if(#p>0)then for e=1,#p do local f f=p[e]do for e=0,#f do local g,k,o g=f[e]o=g[1]do k=g[2]end if(o==s and k>=0)then d[k]=o[k]g[1]=d end end end end end return bd[bh];end end else if not(be>7)then if not(be<6)then do if(be>6)then if((s[ba]<s[bh]))then do b=a;end end;else local d,e do e=ba end d=s[a]s[(e+1)]=d;s[e]=d[s[bh]];end end else s[h]();end else do if not(bd[161]>8)then i[j[a]]=s[ba];else if(bd[l]>9)then j=bw[ba](j)else b=((s[ba]~=s[bd[191]])and a or b)end end end end end end end else do if not(be<34)then if not(be>39)then do if not(bd[161]<37)then if not(be>37)then local d,e e=bd[131]d=s[a]s[(e+1)]=d;s[e]=d[j[bd[191]]];else if 38==be then m[b]=cn[bn];do b=a;end else local d do d=ba end do do return s[d](ca(s,(d+1),a))end end;end end else if not(bd[161]>34)then bw[ba]=bw[bd[95]]else do if not(be~=35)then m[b]={[161]=bd[161]- -57,[191]=67,[111]=14,[126]=0,[131]=30};b=(b-1);else local d,e,f e=ba d=s[(e+2)]do f=(s[e]+d)end s[e]=f;if((d>0))then if(not(f>s[e+1]))then do b=a;end s[(e+3)]=f;end elseif(not(f<s[e+1]))then b=a;s[(e+3)]=f;end end end end end end else if not(be<43)then do if not(be>43)then do s[ba]=s[bd[111]][s[bh]];end else if(be>44)then s[ba]=s[a][j[bh]];else local d d=ba s[d]=s[d](ca(s,d+1,t));end end end else do if not(be<41)then if(be>41)then s[ba]();else s[ba]={};end else c[a]=s[ba];end end end end else if not(be<28)then if not(be<31)then if not(be>31)then local c,d,e,f,g d=ba c=bd[191]f=(d+2)e={s[d](s[d+1],s[f])}for h=1,c do s[(f+h)]=e[h]end g=s[(d+3)]if g then s[f]=g else b=a;end;else if(bd[161]<33)then do s[ba]=(s[a]/j[bh]);end else for c=ba,a do s[c]=nil;end;end end else do if not(be<29)then do if(be<30)then s[ba][j[a]]=j[bh];else s[ba]=(s[a]/s[bd[w]]);end end else end end end else if not(be>24)then if(bd[161]>23)then b=((j[ba]~=j[bh])and a or b)else do return s[ba]();end;end else do if not(be>25)then local c,d do c,d=cc(...)end for d=1,bd[131]do s[(d-1)]=c[d]end else if(be>26)then do s[ba]=bm(n[a],nil,i);end else local a,c c=ba a={}while#p>0 do for d=1,#p do local d=p[d]for e=0,#d do local d=d[e]local e=d[1]local f=d[2]if e==s and f>=0 then a[f]=e[f]d[1]=a end end end break end do return ca(s,c,t);end end end end end end end end end end end b=(b+1);end;end end;end end end end else if bj>=911 then if bj<=953 then if bj<=911 then bl=function(a,b,c,d)local d,e,f=83,66,92,31,72,28,55,78,88,10,34,13,77,49 while d~=44 do if e>=148 then if e<=148 then e=188 f=(f-f%1)else if e<213 then e=218 return f else d=44;end end else if e>=106 then if e>110 then f=((b/cd[a])%cd[c])e=148 else e=129 f=nil end else f=nil e=106 end end end end bj=930 else if bj>937 then bj=977 do br=function(a,b,c,d,d,d,d)local d do d=((a/2^(b-1))%2^((c-1)-(b-1)+1))end return(d-d%1);end end else bj=953 ct=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+bq[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)end end else if bj>=999 then if bj>1008 then cp=function()local a a=cb(cm,ch,ch)ch=(ch+1);return a;end bj=1069 else cg=function()local a,b,c,d b,a,d,c=cb(cm,ch,(ch+3))ch=(ch+x);return((c*16777216)+(d*65536)+(a*256)+b);end bj=1020 end else ch=1 bj=999 end end else if bj>=826 then if bj<=826 then bj=852 cd={[0]=1}else if bj<879 then cv=2 bj=886 else bj=911 for a=1,31 do do cd[a]=cv end cv=(cv*2)end end end else if bj<784 then cj=''bj=786 else co=(2^bb)bj=826 end end end end end end end)(1,11,20,85,1,131,1,1,13,11,15,161,0,6,19,13,48,161,11,15,1,15,191,4,2,77,0,52,11,9,4,false,1,0)
