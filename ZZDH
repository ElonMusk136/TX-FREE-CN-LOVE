return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,u,u)local u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci=121,59,17,33,54,48,97,84,46,87,43,24,17,46,99,11,86,81,63,81,12,36,91,55,53,87,72,70,83,12,62,39,91,63,35,83,66,18,49,83,44,68,83,92,41,44,11,22,50,58,91 while u~=74 do if v>=737 then if v<=1102 then if v<=868 then if v<=769 then if v>739 then y=(2^52)v=799 else do bq=''end v=769 end else if v>=835 then if v>840 then v=913 for u=1,31 do z[u]=bl bl=(bl*2)end else v=868 bl=2 end else z={[0]=1}v=835 end end else if v<=987 then if v<=913 then v=951 cf=function(u,cj,ck,cl,cl)local cl,cm,cn=62,36,91,92,75,83,29,22,41,88,84,55,35,11 while cl~=25 do if cm<=125 then if cm>=82 then if cm>86 then do cn=((cj/z[u])%z[ck])end cm=147 else do cn=nil end cm=125 end else cm=82 cn=nil end else if cm<=147 then cm=169 do cn=(cn-cn%1)end else if cm<192 then cm=198 return cn else cl=25;end end end end end else if v>953 then bh=function(u,cj,ck,cl)local cl cl=((u/2^(cj-1))%2^((ck-1)-(cj-1)+1))return(cl-cl%1);end v=1022 else bi=(bit_lib and bit_lib.bxor or function(u,cj)u=u%(2^32)cj=cj%(2^32)local ck,cl=0,1 while u>0 and cj>0 do local cm,cn=u%16,cj%16 ck=ck+bn[cm+1][cn+1]*cl u=(u-cm)/16 cj=(cj-cn)/16 cl=cl*16 end ck=ck+u*cl+cj*cl return ck end)v=987 end end else if v<=1022 then v=1056 by=1 else if v<1094 then v=1102 ci=function()local u,cj,ck,cl cj,cl,u,ck=bt(cd,by,(by+3))by=(by+4);do return((ck*16777216)+(u*65536)+(cl*256)+cj);end end else v=1150 ch=function()local u u=bt(cd,by,by)by=(by+1);return u;end end end end end else if v>=1327 then if v>=1430 then if v>=1455 then if v<1482 then v=1487 do return cc(bk(bv()),{},bv())();end else break end else v=1455 cc=function(u,cj,ck,cl,cl)local cl,cm,cn,co,cp cp=u[19]cn=u[148]co=bc cm=u[184]cl=u[38]do return function(...)local u,co,cq,cr,cs,ct,cu,cv,cw do cr=1 end do cs=-1 end cv=-1 u={}cq={...}cw=(bo('#',...)-1)do co={}end cu={}for cv=0,cw do if(not(cv<cn))then do u[(cv-cn)]=cq[(cv+1)];end else cu[cv]=cq[(cv+1)];end;end;ct=(cw-cn+1)while true do local ct,cv,cx,cy,cz,da,db,dc,dd,de dc=cp[cr]do db=dc[130]end de=dc[24]cy=dc[143]cz=dc[88]da=dc[36]ct=dc[108]cv=dc[115]dd=dc[29]cx=dc[8]if not(db>42)then if not(db<21)then if not(db<32)then if not(db>36)then if not(dc[130]>33)then if 32==dc[130]then cu[cy][cu[dd]]=cu[da];else local de,df de=cy df=cu[dd]cu[(de+1)]=df;do cu[de]=df[cm[da]];end end else if not(db>34)then cu[cx]=(function()cu[dc[143]]=cc(cl[cz],nil,ck);end)else do if(db>35)then cu[cy]=-cu[dd];else local de,df do df,de=x(...)end do for de=1,dc[143]do cu[(de-1)]=df[de]end end end end end end else if not(db<40)then if not(db>40)then do if(not(cu[cy]<cu[dc[36]]))then cr=dd;end;end else if(db>41)then cu[cy]=(cu[dd]%cm[dc[36]]);else bc[cy]=bc[cz]end end else do if not(db<38)then if(db>38)then cu[cy]=cc(cl[dd],nil,ck);else local de de=cy do do return cu[de](bu(cu,(de+1),dd))end end;end else cr=((cm[cy]<cu[dc[36]])and dc[29]or cr)end end end end else if not(db>25)then if not(db>22)then if(db>21)then cu[cy]=cu[dd]else cu[cy]={};end else if not(db>23)then local de de=cy cu[de]=cu[de](cu[de+1]);else do if(db<b)then local b,de,df,dg de=cy df,b=x(cu[de](bu(cu,(de+1),dd)))do cs=(b+de-1)end do dg=0 end for b=de,cs do dg=(dg+q);cu[b]=df[dg];end;else end end end end else do if not(db>28)then if not(dc[130]>26)then else if(db>27)then do cu[cx]=(function()cu[cy]=cc(cl[cz],nil,ck);end)end else cu[cy]=cj[dd];end end else if not(db>29)then cu[cy]=ck[cm[dd]][cm[da]];else if(dc[130]>30)then bc=cu else do return cu[cy]end end end end end end end else if not(db<10)then if not(db<15)then if not(db>17)then if not(db>15)then do return cu[cv][ct]end else if(db>16)then cu[cy]=cu[dc[29]][cm[da]];else local b,q,cl q=cy b=cu[q]do cl=cu[(q+2)]end do if((cl>0))then if((b>cu[q+1]))then cr=dc[29];else cu[(q+3)]=b;end elseif((b<cu[q+1]))then cr=dd;else cu[(q+3)]=b;end end end end else if not(dc[130]<19)then if(db>19)then bc[cy]={}else local b,q b=cy q={}for cl=1,#co do local de de=co[cl]do for cl=0,#de do local df,dg,dh do df=de[cl]end dh=df[1]dg=df[2]if(dh==cu and dg>=b)then q[dg]=dh[dg];do df[1]=q;end end;end;end end;end else cu[cy]=bc[cz]end end else if not(db<12)then if not(dc[130]<13)then if 13==db then while((cm[cy]<cu[da]))do cr=dd;break end else for b=cy,dd do cu[b]=nil;end;end else cu[cy]=cu[dd];end else if(db>10)then do cu[cy]=(cu[dc[t]]+cm[da]);end else do cp[cr]=be[dc[108]];end cr=dd;end end end else if not(db>4)then do if not(dc[130]<2)then if not(db<3)then if(db>3)then cu[dc[143]][cm[dd]]=cm[da];elseif((cu[cy]<cu[da]))then cr=dd;end else if not cu[cy]then cr=dd;end;end else do if(db<a)then local a a=cu[cv][ct]cu[cv][ct]=(a..cu[da]);elseif(not(cu[cy]==cu[da]))then do cr=dc[29];end end end end end else if not(db>6)then if 5==db then ck[cm[dc[29]]]=cu[cy];else cu[cy]=(cu[dd]*cm[da]);end else if not(db<8)then if(db>8)then ck=cu[dc[cy]]else cu[cx]();end else cm=bc[cy](cm)end end end end end else do if not(db<65)then if not(dc[130]>75)then if not(db>69)then if not(db<67)then if not(db<68)then if not(db~=68)then cu[cy]=cm[dd]else cp[cr]=be[ct];cr=dd;end else local a,b,q a=cy do q=cu[(a+2)]end do b=(cu[a]+q)end cu[a]=b;if((q>0))then if(not(b>cu[a+1]))then cr=dd;cu[(a+3)]=b;end elseif(not(b<cu[a+1]))then cr=dd;cu[(a+3)]=b;end end else if(db<66)then local a,b a=cy b={}while#co>0 do for q=1,#co do local q=co[q]for t=0,#q do local q=q[t]local t=q[1]local s=q[s]if t==cu and s>=0 then b[s]=t[s]q[1]=b end end end break end return bu(cu,a,cs);else local a,b,q b=dc[143]a={cu[b](bu(cu,b+1,dd))}q=0 for s=b,dc[36]do q=(q+1);cu[s]=a[q];end end end else if not(dc[130]<73)then if not(db<74)then if(db>74)then cu[cy]=(cu[dd]-cu[da]);else cp[cr]={[143]=8,[29]=12,[108]=0,[36]=0,[130]=db-17};cr=(cr-1);end else cu[dc[cy]]=cu end else do if not(dc[130]>70)then cr=((cu[dc[143]]~=cu[da])and dc[29]or cr)else if(dc[130]<72)then local a,b a=dc[29]b=cu[a]for q=(a+1),da do do b=(b..cu[q]);end end;cu[dc[143]]=b;else cu[cy]();end end end end end else if not(dc[130]<81)then if not(db>83)then if not(db<82)then do if not(db~=82)then cu[cy]=bc[cz]else cu[cy]=nil;end end else local a,b,q,s b=cy q=((da-1)*i)a=cu[b]s=dd for i=1,s do a[(q+i)]=cu[(b+i)]end;end else if not(db<85)then if(db>85)then do bc[cy]()end else if cy then cy=false;da=dd;do cr=(cr-1);end else cr=(cr+dd+da);end end else do cu[cy]=(cu[dd]%cu[dc[36]]);end end end else do if not(dc[130]<78)then if not(db<l)then if not(db~=79)then cu[cy]=(cu[dd]+cu[da]);else if not cu[dc[36]]then do cu[cy]=cu[da];end cr=dd;end;end else local a,b,i,l,q i=cy b=da q=(i+2)l={cu[i](cu[i+1],cu[q])}for s=1,b do cu[(q+s)]=l[s]end a=cu[(i+3)]if a then cu[q]=a else cr=dd;end;end else if(dc[130]<77)then if cu[cy]then cr=dd;end;else local a a=cy do return bu(cu,a,(a+dc[29]))end;end end end end end else do if not(db<54)then if not(db>58)then if not(db<56)then if not(db<57)then if(db>57)then else cu[cy]=ck[cm[dc[29]]];end else local a,b b=dc[143]do a=dc[29]end for i=b,a do cu[i]=u[(i-b)];end;end else do if not(db~=54)then cu[dc[143]]=(not(dd==0));cr=(cr+1);else cu[cy]=(cu[dd]/cm[dc[36]]);end end end else if not(db>61)then if not(db<60)then if(dc[130]>60)then cu[dc[143]]=(cu[dd]/cu[da]);else cj[dd]=cu[dc[143]];end else bc[cy]=cu[dc[88]]end else if not(db>62)then local a,b a=dc[143]b=cu[dd]cu[(a+1)]=b;cu[a]=b[cu[da]];else if(db<64)then local a do a=dc[143]end cu[a]=cu[a](bu(cu,a+1,dc[29]));else local a a={}if(#co>0)then for b=1,#co do local i do i=co[b]end for b=0,#i do local l,q,s l=i[b]q=l[1]do s=l[2]end if(q==cu and s>=0)then a[s]=q[s]l[1]=a end end end end return false;end end end end else if not(db<f)then if not(db>50)then if not(db<49)then if(db>49)then cu[cy]=cu[dd][cu[dc[36]]];else cu[cy]=(cu[dd]^cu[da]);end else cu[dc[143]]=(not cu[dd]);end else if not(db>51)then do if((cu[cy]>cu[da]))then cr=dd;end;end else if(db>52)then do while((cu[cy]~=cm[da]))do cr=dd;break end end else cs=dc[dc[143]];end end end else if not(db>44)then if(dc[g]>43)then local a a=dc[143]cu[a]=cu[a](bu(cu,a+1,cs));else cu[cy]=(cu[dd]*cu[da]);end else if not(dc[130]>45)then cu={};for a=0,cw do if(a<cn)then cu[a]=cq[(a+1)];else break end;end;else if(db>46)then cr=dd;else cu[cy]=#cu[dd];end end end end end end end end end cr=(cr+1);end;end;end end end else if v<=1327 then v=1356 bk=function(a,b,b,b)local b,f,g,i,l,q,s,t=59,60,61,32,61,12,14,79,81,55,91,58,29,35,91,22,48,36,89,33,46,55,73,27 while b~=41 do if f>=279 then if f<=359 then if f>=321 then if f>329 then f=406 g[184]=t else f=359 for u=1,l do local cj,ck,cl,cm=46,36,36,68,10,42,31,75,31,40,67,49,30,56,86 while cj~=35 do if ck<=107 then if ck>=77 then if ck<101 then ck=107 cm=ch()else ck=152 cl=nil end else ck=77 cl,cm=nil end else if ck<=152 then if(3==cm)then cl=(not(ch()==0));elseif(1==cm)then cl=bm();elseif(4==cm)then cl=br();elseif(2==cm)then cl=a[br()];end;ck=194 else if ck>198 then cj=35;else ck=239 t[u]=cl;end end end end end end else if f<295 then f=301 l=ci()else f=321 do t={}end end end else if f<=422 then if f<414 then g[148]=ch();f=422 else f=448 for a=1,ci()do do i[a-1]=bk();end end end else if f<=448 then g[38]=i;f=494 else if f<506 then f=510 return g;else b=41;end end end end else if f<=164 then if f>=115 then if f<155 then i={}f=164 else g={}f=184 end else if f<77 then f=86 g,i,l,q,s,t=nil else q={}f=115 end end else if f>=228 then if f<255 then do for a=1,ci()do local b,i,l,t,u,cj=87,54,15,28,26,25,83,99,77,91,79,51,18,24,11,41,44,61,71,24,39,51,58,35 while b~=45 do if i<=245 then if i<=118 then if i>=93 then if i<113 then t[24]=ch();i=118 else do t[75]={};end i=137 end else if i>59 then i=93 t={{},nil,nil}else i=73 l,t,u,cj=nil end end else if i>=180 then if i>=210 then if i<237 then do l=bh(cj,1,2)end i=245 else t[100]=l i=284 end else u=ci()i=210 end else if i>143 then do cj=ci()end i=180 else if 1==ch()then do for l=1,ch()do t[75][l]={ch()==0,ci()}end end end i=160 end end end else if i<=375 then if i>=348 then if i<367 then t[29]=bh(u,12,33);i=375 else i=390 t[36]=bh(cj,21,29);end else if i<319 then i=325 t[130]=bh(u,1,11);else t[143]=bh(cj,3,11);i=348 end end else if i<=416 then if i>393 then t[115]=-t[143]i=461 else t[108]=bh(cj,12,20);i=416 end else if i>=496 then if i<516 then i=519 do q[a]=t;end else b=45;end else i=496 t[8]=-t[c]end end end end end end end f=262 else do g[k]=q;end f=279 end else if f<204 then s=ci()f=210 else f=228 for a=(#be+1),(#be+s)do local b,c,f,g,i=68,62,88,46,33,66,75,25,98,58,75,41,72,38,91,78,28,12,37,24,30,57,20 while b~=48 do if c<=274 then if c<=155 then if c>=136 then if c>145 then i=ci()c=196 else f[24]=ch();c=155 end else if c<88 then f,g,i=nil c=90 else f={}c=136 end end else if c<=217 then if c<210 then g=ci()c=217 else c=241 f[108]=ch();end else if c<267 then c=274 do f[100]=bh(i,1,2);end else c=305 do f[130]=bh(g,1,11);end end end end else if c<=390 then if c<=347 then if c<342 then f[143]=bh(i,3,11);c=347 else f[88]=bh(i,d,20);c=364 end else if c>368 then do f[29]=bh(g,12,33);end c=428 else c=390 f[36]=bh(i,21,29);end end else if c<=474 then if c>435 then do f[8]=-f[36]end c=521 else c=474 do f[115]=-f[143]end end else if c>528 then b=48;else c=553 be[a]=f;end end end end end end end end end end end end else if v<1394 then v=1397 bc={}else bg={}v=1430 end end end else if v>=1221 then if v<=1221 then v=1269 do br=function(a,a,a)local a,b,c,d=70,67,55,53,44,77,93,53,12,80,95,33,68,14,78,50 while a~=37 do if b<=102 then if b<=67 then b=85 c,d=nil else if b<100 then b=102 c=ci()else d=cd:sub(by,(by+c-1))b=140 end end else if b>=175 then if b>182 then break else b=220 do return d;end end else b=175 by=(by+c);end end end end end else if v>1278 then do be={}end v=1327 else x=function(...)return{...},bo('#',...)end v=1291 end end else if v<1178 then cb=function()local a,b b,a=bt(cd,by,(by+2))do by=(by+2);end return((a*256)+b);end v=1180 else v=1221 bm=function()local a,b,c,d,f,g,i,k=53,44,31,37,39,58,73,97,14,76,47,58,45,62,70,64,84,69,47 while a~=34 do if b>=179 then if b>=292 then if b>=308 then if b<334 then b=338 return(k*(h^(g-1023))*(i/y+f))else a=34;end else do if 0==g then if not(i==0)then do g=1 end do f=0 end else return(k*0)end elseif not(g==2047)then else if not(i~=0)then do return(k*(0/0))end else return(k*(1/0))end end end b=308 end else if b>=224 then if b>230 then f=1 b=292 else do i=(cf(0,c,20)*4294967296+d)end b=267 end else b=224 g=cf(20,c,j)end end else if b<=80 then if b>52 then b=115 d=ci()else b=80 c,d,f,g,i,k=nil end else if b>=131 then if b<153 then b=157 if((d==0 and c==0))then return 0 end else b=179 do k=((-1)^cf(31,c,1))end end else b=131 do c=ci()end end end end end end end end end end else if v<=375 then if v>=216 then if v>=297 then if v<=297 then v=340 bf=math.ldexp else if v<368 then v=375 bv=(getfenv or function()return _ENV end)else bz=setmetatable v=404 end end else if v>=233 then if v<256 then v=262 bp=table.concat else bx=table.insert v=297 end else v=233 bb=string.rep end end else if v>=141 then if v>=163 then if v<195 then v=200 cg=string.sub else v=216 bd=string.gsub end else v=163 bs=string.char end else if v>62 then bt=string.byte v=141 else v=105 w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci=nil end end end else if v<=529 then if v>=450 then if v>=486 then if v>489 then v=564 do ba=math.floor end else bw=math.abs v=529 end else ca=(function(a,b,b)if'number'==w(a)then do return true end else return false end end)v=486 end else if v<425 then v=432 bo=select else v=450 w=type end end else if v>=646 then if v>=677 then if v<713 then v=717 cd=bdfunction(a,b,b)return ce[bj(a,16)]end)else bn={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,n,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{m,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,p,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,r,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,e,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,o,1,0,},nil,nil}v=737 end else v=677 for a=0,255 do ce[a]=bs(a);end end else if v<=564 then bu=(unpack or table.unpack)v=590 else if v<610 then bj=tonumber v=615 else ce={}v=646 end end end end end end end end)(1,25,36,12,2,48,130,2,50,11,19,79,2,15,2,2,1,7,2,29)
